{"version":3,"file":"static/js/145.a0c3204c.chunk.js","mappings":"uLAuEE,UAhDF,SAAsBA,GAEpB,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WAAKC,QAAQC,IAAI,qBAC3B,IACA,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACfI,EAAQd,EAARc,KAGH,OAFFR,QAAQC,IAAIO,IAGRC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUG,OAAQ,IAAKC,MAAO,IAAKC,IAAKP,EAAKO,OAC5DN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBM,QAAS,WAC3CrB,EAAS,SACTE,GAASoB,EAAAA,EAAAA,IAAQ,CAACC,GAAIV,EAAKU,GAAIC,KAAMX,EAAKY,MAAOd,MAAQ,IAC3D,EAAEK,SAAC,8BACHC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,WAAWM,QAC3B,WACET,EAASD,EAAQ,EACnB,EACDK,SAAC,oBAAaC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAEL,WAG5CG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,cAAaC,SAAEH,EAAKY,SACjCX,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,SAAQC,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,iBAAS,IAAEH,EAAKa,OAAO,QAC1EZ,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMC,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,kBAAWH,EAAKc,SAAYV,EAAAA,EAAAA,KAAA,aAE/EH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,KAACC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,kBAAU,IAAEH,EAAKe,KAAK,QACvDd,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,KAACC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,iBAAS,IAAEH,EAAKgB,QAAWZ,EAAAA,EAAAA,KAAA,gBAGhEA,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAAcC,SAAEH,EAAKiB,qBAGtCb,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACC,KAAMnB,MAGjB,C","sources":["pages/Details.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Tab from \"../tap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItem } from \"../store\";\r\n\r\n//styled-components 라이브러리를 styled라는 이름으로 가져옴\r\n// import styled from 'styled-components';\r\n// //color의 색만 다른 버튼\r\n// let Mybutton = styled.button`\r\n//   background: ${(props)=> props.bg};\r\n//   color: ${props => props.bg == 'green' ? 'white' : 'black'};\r\n//   padding: 10px;\r\n// `\r\n\r\n\r\n// //Mybutton의 스타일을 복사하되, Newbtn만의 스타일도 추가할 수 있다. 오버라이딩 개념과 같음!\r\n// let Newbtn = styled.button(Mybutton)`\r\n//   padding: 20px;\r\n//   margin: 20px;\r\n// `\r\n\r\n\r\nfunction NobelDetails(props){\r\n\r\n  let navigate = useNavigate();\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(()=>{console.log('마운트');\r\n  })\r\n  let [count, setCount] = useState(0);\r\n  let {book} = props;\r\n  console.log(book);\r\n\r\n    return(\r\n      <div className=\"container text-center\">\r\n        <div className=\"row detailRow\">\r\n          <div className=\"col\">\r\n            <img className='bookImg' height={320} width={220} src={book.src}></img>\r\n            <div className=\"detailBtns\">\r\n              <button className=\"btn btn-primary\" onClick={()=>{\r\n                navigate(\"/cart\");\r\n                dispatch(addItem({id: book.id, name: book.title, count : 1 }));\r\n              }}>장바구니</button>\r\n              <button className=\"btnHeart\" onClick={\r\n                () => {\r\n                  setCount(count + 1);\r\n                }\r\n              }> 💓 </button><span className=\"likes\">{count}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col colnum2\">\r\n            <div className=\"description2\">\r\n              <p className='detailTitle'>{book.title}</p>\r\n              <div>\r\n                <span className='author'><span className=\"details\">작가</span> {book.author} </span>\r\n                <span className='star'><span className=\"details\">별점 </span>{book.star}</span><br></br>\r\n              </div>\r\n              <div>\r\n                <span> <span className=\"details\">권 수</span> {book.date} </span>\r\n                <span> <span className=\"details\">연령</span> {book.age}</span><br></br>\r\n              </div>\r\n            </div>\r\n            <p className=\"description3\">{book.description}</p>\r\n          </div>\r\n        </div>\r\n        <Tab data={book}></Tab>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default NobelDetails;"],"names":["props","navigate","useNavigate","dispatch","useDispatch","useEffect","console","log","_useState","useState","_useState2","_slicedToArray","count","setCount","book","_jsxs","className","children","_jsx","height","width","src","onClick","addItem","id","name","title","author","star","date","age","description","Tab","data"],"sourceRoot":""}